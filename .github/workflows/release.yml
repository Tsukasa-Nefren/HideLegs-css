name: Build and Release

# 여기서 버전을 수정하세요 (예: v1.0.0, v1.0.1, v2.0.0)
# 빈 문자열이면 릴리스가 생성되지 않습니다
env:
  RELEASE_VERSION: ""

on:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/release.yml'
  workflow_dispatch:

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      should-release: ${{ steps.check.outputs.should-release }}
      version: ${{ steps.check.outputs.version }}
    steps:
    - name: Check if version is set
      id: check
      run: |
        if [ -z "${{ env.RELEASE_VERSION }}" ] || [ "${{ env.RELEASE_VERSION }}" = "" ]; then
          echo "should-release=false" >> $GITHUB_OUTPUT
          echo "Version is empty, skipping release"
        else
          echo "should-release=true" >> $GITHUB_OUTPUT
          echo "version=${{ env.RELEASE_VERSION }}" >> $GITHUB_OUTPUT
          echo "Version set to: ${{ env.RELEASE_VERSION }}"
        fi

  build:
    needs: check-version
    if: needs.check-version.outputs.should-release == 'true'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build Release
      run: dotnet build --configuration Release --no-restore
      
    - name: Publish
      run: dotnet publish --configuration Release --no-build --output ./publish
      
    - name: Create release directory
      run: |
        mkdir -p release/HideLegs
        cp publish/HideLegs.dll release/HideLegs/
        cp README.md release/
        cp LICENSE release/
        
    - name: Archive release files
      run: |
        cd release
        zip -r ../HideLegs-${{ needs.check-version.outputs.version }}.zip .
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: HideLegs-${{ needs.check-version.outputs.version }}
        path: release/
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ needs.check-version.outputs.version }}
        name: ${{ needs.check-version.outputs.version }}
        files: |
          HideLegs-${{ needs.check-version.outputs.version }}.zip
          release/HideLegs/HideLegs.dll
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
